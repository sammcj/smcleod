<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>networking - Tag - smcleod.net</title><link>https://beta.smcleod.net/tags/networking/</link><description>networking - Tag - smcleod.net</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Sam McLeod</copyright><lastBuildDate>Fri, 13 Oct 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://beta.smcleod.net/tags/networking/" rel="self" type="application/rss+xml"/><item><title>Broadcom, Or How I Learned To Start Worrying And Drop The Packet</title><link>https://beta.smcleod.net/2017/10/broadcom-or-how-i-learned-to-start-worrying-and-drop-the-packet/</link><pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate><author><name>Sam McLeod</name></author><guid>https://beta.smcleod.net/2017/10/broadcom-or-how-i-learned-to-start-worrying-and-drop-the-packet/</guid><description><![CDATA[<div class="featured-image">
                <img src="/2017/10/broadcom-or-how-i-learned-to-start-worrying-and-drop-the-packet/office-space-broadcom.jpg" referrerpolicy="no-referrer">
            </div>Earlier this week we started the process to upgrade one of our hypervisor compute clusters when we encountered a rather painful bug with HP&rsquo;s Broadcom NIC chipsets.
We were part way through a routine rolling pool upgrade of our hypervisor (XenServer) cluster when we observed unexpected and intermittent loss of connectivity between several VMs, then entire XenServer hosts.
The problems appeared to impact hosts that hadn&rsquo;t yet upgraded to XenServer 7.2. We now attribute this to a symptom of extreme packet loss between the hosts in the pool and thanks to buggy firmware from Broadcom and HP.
We were aware of the recently published issues with Broadcom/HP NICs used in VMware clusters where NICs would be bricked by a firmware upgrade.]]></description></item><item><title>Speeding Up rsync</title><link>https://beta.smcleod.net/2016/05/speeding-up-rsync/</link><pubDate>Tue, 03 May 2016 00:00:00 +0000</pubDate><author><name>Sam McLeod</name></author><guid>https://beta.smcleod.net/2016/05/speeding-up-rsync/</guid><description><![CDATA[<div class="featured-image">
                <img src="/2016/05/speeding-up-rsync/robin-pierre-323861.jpg" referrerpolicy="no-referrer">
            </div>The most common way to use rsync is probably as such:
rsync -avr user@&lt;source&gt;:&lt;source_dir&gt; &lt;dest_dir&gt; Resulting in 30-35MB/s depending on file sizes
This can be improved by using a more efficient, less secure encryption algorithm, disabling compression and telling the SSH client to disable some unneeded features that slow things down.
With the settings below I have achieved 100MB/s (at work between VMs) and over 300MB/s at home between SSD drives.
Requirements Python3 (For RHEL/CentOS 7 yum install python34) python-nagiosplugin My pre-built RPMs or pip3 install nagiosplugin PyNagSystemD rsync -arv --numeric-ids --progress -e &#34;ssh -T -c aes256-gcm@openssh.com -o Compression=no -x&#34; user@&lt;source&gt;:&lt;source_dir&gt; &lt;dest_dir&gt; If you want to delete files at the DST that have been deleted at the SRC (obviously use with caution:]]></description></item><item><title>Replacing Junos Pulse with OpenConnect</title><link>https://beta.smcleod.net/2015/09/replacing-junos-pulse-with-openconnect/</link><pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate><author><name>Sam McLeod</name></author><guid>https://beta.smcleod.net/2015/09/replacing-junos-pulse-with-openconnect/</guid><description><![CDATA[<div class="featured-image">
                <img src="/2015/09/replacing-junos-pulse-with-openconnect/backdrop-zbuildings.jpg" referrerpolicy="no-referrer">
            </div>In an attempt to avoid using the Juniper Pulse (Now Pulse Secure) VPN client we tried OpenConnect but found that DNS did not work correctly when connected to the VPN. This bug has now been resolved recently but has not made it&rsquo;s way into a new build, in fact there have been no releases for 6 months.
Luckily the OpenConnect was not too difficult to build from source.
Build OpenConnect on OSX Remove old openconnect and install depsbrew remove openconnect brew install libxml2 lzlib openssl libtool libevent Build openconnectwget git.infradead.org/users/dwmw2/openconnect.git/snapshot/0f1ec30d17aa674142552e275bf3fac30d891b39.tar.gz tar zxvf 0f1ec30d17aa674142552e275bf3fac30d891b39.tar.gz cd openconnect-0f1ec30 LIBTOOLIZE=glibtoolize ./autogen.sh PATH=/usr/local/opt/gettext/bin:$PATH ./configure make make install To connectsudo openconnect --juniper -u myusername www.]]></description></item></channel></rss>